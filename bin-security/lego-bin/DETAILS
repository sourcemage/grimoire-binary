           SPELL=lego-bin
          SPELLX=${SPELL/-bin/}
         VERSION=1.0.1
if [[ "${SMGL_COMPAT_ARCHS[1]}" == "x86_64" || "${SMGL_COMPAT_ARCHS[1]}" == "em64t" ]]; then
            ARCH=amd64
     SOURCE_HASH=sha512:d94243eb888320ffa66d3ceb665c9dbf524679c966013debaabd52cf31874712e088ac87c86a7d92b45fd37a1280e22e421caf94c139f74a647bd31c33d8744c
else
            ARCH=386
     SOURCE_HASH=sha512:d463ce8beb1db2626affebbbebe72ea9e1bccdbdb90f5412e59aae742a1a9b436ad82e54ee2fad9b8689047fc154e61bcecedddcafbce6bd1b7164f0e65a724e
fi
          SOURCE=${SPELLX}_v${VERSION}_linux_${ARCH}.tar.gz
   SOURCE_URL[0]=https://github.com/xenolf/${SPELLX}/releases/download/v${VERSION}/${SOURCE}
SOURCE_DIRECTORY="${BUILD_DIRECTORY}/${SPELL}-${VERSION}"
        WEB_SITE=https://github.com/xenolf/lego
         ENTERED=20160910
      LICENSE[0]=MIT
           SHORT="Let's Encrypt client and ACME library written in Go"
cat << EOF
lego is Let's Encrypt client and ACME library written in Go.

Features:
* Register with CA
* Obtain certificates, both from scratch or with an existing CSR
* Renew certificates
* Revoke certificates
* Robust implementation of all ACME challenges
  o HTTP (http-01)
  o TLS with Server Name Indication (tls-sni-01)
  o DNS (dns-01)
* SAN certificate support
* Comes with multiple optional DNS providers
* Custom challenge solvers
* Certificate bundling
* OCSP helper function
EOF
